{
  "_from": "loaders.gl@^0.3.5",
  "_id": "loaders.gl@0.3.5",
  "_inBundle": false,
  "_integrity": "sha512-En5xaJLrfjnoM+Pl8pCDCr4XwIxR55SCD0KYM23Xd5CDSmj8QZhQIN1H1hYt/evM5lGcGOQQsgfWykZANZcfsw==",
  "_location": "/loaders.gl",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "loaders.gl@^0.3.5",
    "name": "loaders.gl",
    "escapedName": "loaders.gl",
    "rawSpec": "^0.3.5",
    "saveSpec": null,
    "fetchSpec": "^0.3.5"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://r2.cnpmjs.org/loaders.gl/-/loaders.gl-0.3.5.tgz",
  "_shasum": "08c769e92e15004667516ed65a4d1f7a721e50cf",
  "_spec": "loaders.gl@^0.3.5",
  "_where": "D:\\工作\\three.test - 副本",
  "bin": {
    "glbdump": ".bin/glbdump"
  },
  "browser": {
    "fs": false
  },
  "bugs": {
    "url": "https://github.com/uber/luma.gl/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "d3-request": "^1.0.6",
    "draco3d": "^1.3.3",
    "webgl-obj-loader": "^1.1.3"
  },
  "deprecated": false,
  "description": "Framework-independent loaders for 3D graphics formats",
  "esnext": "dist/es6/index.js",
  "files": [
    "src",
    "dist",
    ".bin"
  ],
  "homepage": "https://github.com/uber/luma.gl#readme",
  "keywords": [
    "webgl",
    "loader",
    "3d",
    "point cloud",
    "GLB",
    "OBJ",
    "PLY",
    "LAZ",
    "PCD",
    "KML"
  ],
  "license": "MIT",
  "main": "dist/es5/index.js",
  "module": "dist/esm/index.js",
  "name": "loaders.gl",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/uber/luma.gl.git"
  },
  "scripts": {
    "bench": "node test/bench/node.js",
    "bench-browser": "webpack-dev-server --config test/webpack.config.js  --env.bench --progress --hot --open",
    "build": "npm run clean && webpack && npm run build-es6 && npm run build-esm && npm run build-es5 && npm run build-size",
    "build-es5": "BABEL_ENV=es5 babel src --config-file ../../babel.config.js --out-dir dist/es5 --source-maps --ignore 'node_modules/'",
    "build-es6": "BABEL_ENV=es6 babel src --config-file ../../babel.config.js --out-dir dist/es6 --source-maps --ignore 'node_modules/'",
    "build-esm": "BABEL_ENV=esm babel src --config-file ../../babel.config.js --out-dir dist/esm --source-maps --ignore 'node_modules/'",
    "build-size": "(echo \"source size\" ; find src/ -name '*.js' | xargs cat | wc -c) && (echo \"dist/es6 size\" ; find dist/es6 -name '*.js' | xargs cat | wc -c) && (echo \"dist esm size\" ; find dist/esm -name '*.js' | xargs cat | wc -c) && (echo \"dist es5 size\" ; find dist/es5 -name '*.js' | xargs cat | wc -c)",
    "clean": "rm -fr dist dist-es6 && mkdir -p dist/es5 dist/esm dist/es6",
    "collect-metrics": "./scripts/collect-metrics.sh",
    "cover": "NODE_ENV=test nyc --reporter html --reporter cobertura --reporter=lcov npm run test-cover",
    "lint": "eslint src test && npm run lint-yarn",
    "lint-examples": "eslint examples",
    "lint-yarn": "!(grep -q unpm.u yarn.lock) || (echo 'Please rebuild yarn.lock file using public npmrc' && false)",
    "publish-beta": "yarn build && yarn test-fast && npm publish --tag beta",
    "publish-prod": "yarn build && yarn test-fast && npm publish",
    "start": "echo 'Please see loaders.gl website for how to run examples' && open http://uber.github.io/loaders.gl/#/documentation/getting-started/examples",
    "test": "npm run lint && npm run test-node && npm run build && npm run test-dist &&  npm run collect-metrics && npm run test-browser-puppet",
    "test-browser": "webpack-dev-server --config test/webpack.config.js --progress --hot --open --env.testBrowser ",
    "test-browser-puppet": "node test/start.js test-browser",
    "test-ci": "npm run lint && npm run build && npm run test-node && npm run test-dist &&  npm run collect-metrics",
    "test-cover": "NODE_ENV=test tape -r babel-register test/node.js && nyc report",
    "test-dist": "npm run build-es6 && node test/start.js test-dist",
    "test-fast": "node ../../test/start.js test",
    "test-fp64": "(cd src/shadertools/test && webpack-dev-server --progress --hot --open)",
    "test-node": "node test/node.js",
    "test-shader": "npm run build-dist && budo src/test/fp64-shader.spec.js:build/test-bundle.js --dir test --live --open --watch-glob '**/*.{html,css,scss,js,glsl}' -- -t babelify -t brfs-babel",
    "test-size-es6": "npm run build-es6 && NODE_ENV=production webpack --config test/webpack.config.js --env.import-nothing --env.analyze --env.es6",
    "test-size-esm": "npm run build-esm && NODE_ENV=production webpack --config test/webpack.config.js --env.import-nothing --env.analyze --env.esm"
  },
  "sideEffects": false,
  "version": "0.3.5"
}
